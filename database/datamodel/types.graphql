type User {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  firstName: String!
  lastName: String!
  email: String! @unique
  password: String!
  isSuperHost: Boolean! @default(value: "false")
  ownedPlaces: [Place!]! @relation(name: "PlaceOwner")
  location: Location @relation(name: "UserLocation")
  responseRate: Float
  responseTime: Int
  bookings: [Booking!]! @relation(name: "Bookee")
  paymentAccount: [PaymentAccount!]! @relation(name: "UserPaymentAccounts")
  phone: String!
  sentMessages: [Message!]! @relation(name: "SentMessages")
  receivedMessages: [Message!]! @relation(name: "ReceivedMessages")
  notifications: [Notification!]! @relation(name: "Notifications")
  profilePicture: Picture @relation(name: "ProfilePicture")
  hostingExperiences: [Experience!]! @relation(name: "ExperienceHost")
}

type Place {
  id: ID! @unique
  name: String
  size: PLACE_SIZES
  shortDescription: String!
  description: String!
  slug: String!
  maxGuests: Int!
  numBedrooms: Int!
  numBeds: Int!
  numBaths: Int!
  reviews: [Review!]! @relation(name: "PlaceReviews")
  amenities: Amenities! @relation(name: "PlaceAmenities")
  host: User! @relation(name: "PlaceOwner")
  pricing: Pricing! @relation(name: "PlacePrice")
  location: Location! @relation(name: "PlaceLocation")
  views: PlaceViews! @relation(name: "PlaceViews")
  guestRequirements: GuestRequirements @relation(name: "GuestRequirements")
  policies: Policies @relation(name: "Policies")
  houseRules: HouseRules @relation(name: "HouseRules")
  bookings: [Booking!]! @relation(name: "PlaceBooking")
  pictures: [Picture!]! @relation(name: "PlacePictures")
  popularity: Int!
}

type Pricing {
  id: ID! @unique
  place: Place! @relation(name: "PlacePrice")
  monthlyDiscount: Int
  weeklyDiscount: Int
  perNight: Int!
  smartPricing: Boolean! @default(value: "false")
  basePrice: Int!
  averageWeekly: Int!
  averageMonthly: Int!
  cleaningFee: Int
  securityDeposit: Int
  extraGuests: Int
  weekendPricing: Int
  currency: CURRENCY
}

type GuestRequirements {
  id: ID! @unique
  govIssuedId: Boolean! @default(value: "false")
  recommendationsFromOtherHosts: Boolean! @default(value: "false")
  guestTripInformation: Boolean! @default(value: "false")
  place: Place! @relation(name: "GuestRequirements")
}

type Policies {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  checkInStartTime: Float!
  checkInEndTime: Float!
  checkoutTime: Float!
  place: Place! @relation(name: "Policies")
}

type HouseRules {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  suitableForChildren: Boolean
  suitableForInfants: Boolean
  petsAllowed: Boolean
  smokingAllowed: Boolean
  partiesAndEventsAllowed: Boolean
  additionalRules: String
  place: Place! @relation(name: "HouseRules")
}

type PlaceViews {
  id: ID! @unique
  lastWeek: Int!
  place: Place! @relation(name: "PlaceViews")
}

type Location {
  id: ID! @unique
  lat: Float!
  lng: Float!
  neighbourHood: Neighbourhood @relation(name: "Neighbourhood")
  user: User @relation(name: "UserLocation")
  place: Place @relation(name: "PlaceLocation")
  address: String
  directions: String
  experience: Experience @relation(name: "ExperienceLocation")
  restaurant: Restaurant @relation(name: "RestaurantLocation")
}

type Neighbourhood {
  id: ID! @unique
  locations: [Location!]! @relation(name: "Neighbourhood")
  name: String!
  slug: String!
  homePreview: Picture @relation(name: "HomePreview")
  city: City! @relation(name: "CityNeighbourhood")
  featured: Boolean!
  popularity: Int!
}

type City {
  id: ID! @unique
  name: String!
  neighbourhoods: [Neighbourhood!]! @relation(name: "CityNeighbourhood")
}

# later with @file directive
type Picture {
  id: ID! @unique
  url: String!
  neighbourHood: Neighbourhood @relation(name: "HomePreview")
  user: User @relation(name: "ProfilePicture")
  experience: Experience @relation(name: "ExperiencePreview")
  place: Place @relation(name: "PlacePictures")
  reservation: Restaurant @relation(name: "RestaurantPicture")
  # url(width: Int height: Int): String!
}

type Experience {
  id: ID! @unique
  category: ExperienceCategory @relation(name: "ExperienceCategory")
  title: String!
  host: User! @relation(name: "ExperienceHost")
  location: Location! @relation(name: "ExperienceLocation")
  pricePerPerson: Int!
  reviews: [Review!]! @relation(name: "ExperienceReviews")
  preview: Picture! @relation(name: "ExperiencePreview")
  popularity: Int!
}

type ExperienceCategory {
  id: ID! @unique
  mainColor: String! @default(value: "#123456")
  name: String!
  experience: Experience @relation(name: "ExperienceCategory")
}

type Amenities {
  id: ID! @unique
  place: Place! @relation(name: "PlaceAmenities")
  elevator: Boolean! @default(value: "false")
  petsAllowed: Boolean! @default(value: "false")
  internet: Boolean! @default(value: "false")
  kitchen: Boolean! @default(value: "false")
  wirelessInternet: Boolean! @default(value: "false")
  familyKidFriendly: Boolean! @default(value: "false")
  freeParkingOnPremises: Boolean! @default(value: "false")
  hotTub: Boolean! @default(value: "false")
  pool: Boolean! @default(value: "false")
  smokingAllowed: Boolean! @default(value: "false")
  wheelchairAccessible: Boolean! @default(value: "false")
  breakfast: Boolean! @default(value: "false")
  cableTv: Boolean! @default(value: "false")
  suitableForEvents: Boolean! @default(value: "false")
  dryer: Boolean! @default(value: "false")
  washer: Boolean! @default(value: "false")
  indoorFireplace: Boolean! @default(value: "false")
  tv: Boolean! @default(value: "false")
  heating: Boolean! @default(value: "false")
  hangers: Boolean! @default(value: "false")
  iron: Boolean! @default(value: "false")
  hairDryer: Boolean! @default(value: "false")
  doorman: Boolean! @default(value: "false")
  paidParkingOffPremises: Boolean! @default(value: "false")
  freeParkingOnStreet: Boolean! @default(value: "false")
  gym: Boolean! @default(value: "false")
  airConditioning: Boolean! @default(value: "false")
  shampoo: Boolean! @default(value: "false")
  essentials: Boolean! @default(value: "false")
  laptopFriendlyWorkspace: Boolean! @default(value: "false")
  privateEntrance: Boolean! @default(value: "false")
  buzzerWirelessIntercom: Boolean! @default(value: "false")
  babyBath: Boolean! @default(value: "false")
  babyMonitor: Boolean! @default(value: "false")
  babysitterRecommendations: Boolean! @default(value: "false")
  bathtub: Boolean! @default(value: "false")
  changingTable: Boolean! @default(value: "false")
  childrensBooksAndToys: Boolean! @default(value: "false")
  childrensDinnerware: Boolean! @default(value: "false")
  crib: Boolean! @default(value: "false")
}

type Review {
  id: ID! @unique
  createdAt: DateTime!
  text: String!
  stars: Int!
  accuracy: Int!
  location: Int!
  checkIn: Int!
  value: Int!
  cleanliness: Int!
  communication: Int!
  place: Place! @relation(name: "PlaceReviews")
  experience: Experience @relation(name: "ExperienceReviews")
}

type Booking {
  id: ID! @unique
  createdAt: DateTime!
  bookee: User! @relation(name: "Bookee")
  place: Place! @relation(name: "PlaceBooking")
  startDate: DateTime!
  endDate: DateTime!
  payment: Payment! @relation(name: "BookingPayment")
}

type Payment {
  id: ID! @unique
  createdAt: DateTime!
  serviceFee: Float!
  placePrice: Float!
  totalPrice: Float!
  booking: Booking! @relation(name: "BookingPayment")
  paymentMethod: PaymentAccount! @relation(name: "PaymentAccounts")
}

type PaymentAccount {
  id: ID! @unique
  createdAt: DateTime!
  type: PAYMENT_PROVIDER
  user: User! @relation(name: "UserPaymentAccounts")
  payments: [Payment!]! @relation(name: "PaymentAccounts")
  paypal: PaypalInformation @relation(name: "PaypalInformation")
  creditcard: CreditCardInformation @relation(name: "CreditCardInformation")
}

type PaypalInformation {
  id: ID! @unique
  createdAt: DateTime!
  email: String!
  paymentAccount: PaymentAccount! @relation(name: "PaypalInformation")
}

type CreditCardInformation {
  id: ID! @unique
  createdAt: DateTime!
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  firstName: String!
  lastName: String!
  postalCode: String!
  country: String!
  paymentAccount: PaymentAccount @relation(name: "CreditCardInformation")
}

type Message {
  id: ID! @unique
  createdAt: DateTime!
  from: User! @relation(name: "SentMessages")
  to: User! @relation(name: "ReceivedMessages")
  deliveredAt: DateTime!
  readAt: DateTime!
}

type Notification {
  id: ID! @unique
  createdAt: DateTime!
  type: NOTIFICATION_TYPE
  user: User! @relation(name: "Notifications")
  link: String!
  readDate: DateTime!
}

type Restaurant {
  id: ID! @unique
  createdAt: DateTime!
  title: String!
  avgPricePerPerson: Int!
  pictures: [Picture!]! @relation(name: "RestaurantPicture")
  location: Location! @relation(name: "RestaurantLocation")
  isCurated: Boolean! @default(value: "true")
  slug: String!
  popularity: Int!
}
